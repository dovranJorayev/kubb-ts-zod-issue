/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { z } from "zod";

export const getV1UsersCheckSubscriptionQueryParamsSchema = z.object({
  pageNum: z.coerce.number().int().optional(),
  pageSize: z.coerce.number().int().optional(),
  query: z.coerce.number().int(),
});

/**
 * @description Success
 */
export const getV1UsersCheckSubscription200Schema = z
  .object({
    data: z
      .array(
        z.object({
          enabled: z.boolean(),
          name: z.string(),
          id: z.number().int(),
          contact: z.string(),
        }),
      )
      .nullable(),
    pagination: z.object({
      currentPage: z.number().int(),
      totalItems: z.number().int(),
      totalPages: z.number().int(),
    }),
  })
  .nullable();

/**
 * @description Bad request
 */
export const getV1UsersCheckSubscription400Schema = z.object({
  error: z.string(),
});

/**
 * @description Unauthorized
 */
export const getV1UsersCheckSubscription401Schema = z.object({
  error: z.string(),
});

/**
 * @description Forbidden
 */
export const getV1UsersCheckSubscription403Schema = z.object({
  error: z.string(),
});

/**
 * @description Server error
 */
export const getV1UsersCheckSubscription500Schema = z.object({
  error: z.string(),
});

export const getV1UsersCheckSubscriptionQueryResponseSchema = z.lazy(() => getV1UsersCheckSubscription200Schema);
