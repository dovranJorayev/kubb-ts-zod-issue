/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import { z } from "zod";

export const getV1UsersUseridPaymentHistoryPathParamsSchema = z.object({
  userId: z.coerce.number().int(),
});

export const getV1UsersUseridPaymentHistoryQueryParamsSchema = z.object({
  refId: z.coerce.number().int(),
});

/**
 * @description Success
 */
export const getV1UsersUseridPaymentHistory200Schema = z.object({
  items: z
    .array(
      z.object({
        id: z.number().int(),
        duration: z.string(),
        state: z.number().int(),
        userId: z.number().int(),
      }),
    )
    .nullable(),
});

/**
 * @description Bad request
 */
export const getV1UsersUseridPaymentHistory400Schema = z.object({
  error: z.string(),
});

/**
 * @description Unauthorized
 */
export const getV1UsersUseridPaymentHistory401Schema = z.object({
  error: z.string(),
});

/**
 * @description Forbidden
 */
export const getV1UsersUseridPaymentHistory403Schema = z.object({
  error: z.string(),
});

/**
 * @description Not found
 */
export const getV1UsersUseridPaymentHistory404Schema = z.object({
  error: z.string(),
});

/**
 * @description Server error
 */
export const getV1UsersUseridPaymentHistory500Schema = z.object({
  error: z.string(),
});

export const getV1UsersUseridPaymentHistoryQueryResponseSchema = z.lazy(() => getV1UsersUseridPaymentHistory200Schema);
